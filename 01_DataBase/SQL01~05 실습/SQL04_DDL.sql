-- 1
CREATE TABLE TB_CATAGORY(
   NAME VARCHAR2(10),
   USE_YN CHAR(1) DEFAULT 'Y'
   );

-- 2
CREATE TABLE TB_CLASS_TYPE(
   NO VARCHAR2(5) PRIMARY KEY,
   NAME VARCHAR2(10)
);

-- 3
ALTER TABLE TB_CATAGORY ADD PRIMARY KEY(NAME);

-- 4
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- 5
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CATAGORY MODIFY NAME VARCHAR2(20);

-- 6
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CATAGORY RENAME COLUMN NAME TO CATAGORY_NAME;

-- 7
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C008757 TO PK_CLASS_TYPE_NO;
ALTER TABLE TB_CATAGORY RENAME CONSTRAINT SYS_C008709 TO PK_CATAGORY_NAME;
/*
ALTER TABLE TB_CATEGORY
RENAME COLUMN CATEGORY_NAME TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN CLASS_TYPE_NO TO PK_CLASS_TYPE_NO;
*/

-- 8
INSERT INTO TB_CATAGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATAGORY VALUES ('인문사회', 'Y');
COMMIT;

-- 9
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_CATEGORY
FOREIGN KEY (CATEGORY)
REFERENCES TB_CATAGORY(CATAGORY_NAME);

--GRANT CREATE VIEW TO C##TEST;
-- 10
CREATE VIEW VW_STUDENT_INFO
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT);

-- 11 
CREATE VIEW VW_COACH_PROFESSOR
AS (SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME, '지도교수 없음') AS "COACH_PROFESSOR_NAME"
    FROM TB_STUDENT 
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
    ORDER BY DEPARTMENT_NAME
    );

-- 12
CREATE OR REPLACE VIEW VW_DEPARTMENT_STUDENT
AS (SELECT DEPARTMENT_NAME, COUNT(*) AS "STUDENT_COUNT"
    FROM TB_STUDENT
    LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME);

-- 13  (??)
--생성한 뷰에 학번이 없어서 뷰에 학번을 추가해야한다.

SELECT * FROM VW_STUDENT_INFO
WHERE STUDENT_NO = 'A213046'

UPDATE VW_COACH_PROFESSOR
SET STUDENT_NAME = '이상준'
WHERE STUDENT_NO = 'A213046';
/*
CREATE OR REPLACE VIEW VW_STUDENT_IFRO
AS SELECT STUDENT_NO, CASE 
                        WHEN STUDENT_NO = 'A213046' THEN '본인 이름'
                        ELSE STUDNET_NAME
                      END AS STUDENT_NAME
                      STUDENT_ADDRESS
    FROM TB_STUDENT;
*/
-- 14
/*
CREATE VIEW VW_DEPARTMENT_STUDENT
AS (SELECT DEPARTMENT_NAME, COUNT(*) AS "STUDENT_COUNT"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME);
WITH READ ONLY 

WITH READ ONLY : 뷰에 대해서 조회만 가능하도록 하는 옵션

CREATE OR REPLACE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
   FROM TB_STUDENT
   WITH READ ONLY;
*/

-- 15
SELECT CLASS_NO, CLASS_NAME, STUDENT_COUNT
FROM (SELECT CLASS_NO, CLASS_NAME, COUNT(*) AS "STUDENT_COUNT"
      FROM TB_CLASS
      JOIN TB_GRADE USING(CLASS_NO)
      WHERE TERM_NO BETWEEN 200601 AND 200903
      GROUP BY CLASS_NO, CLASS_NAME
      ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 3;  --가장 최근이 2009년

SELECT CLASS_NO, CLASS_NAME, STUDENT_COUNT
FROM (SELECT CLASS_NO, CLASS_NAME, COUNT(*) AS "STUDENT_COUNT"
      FROM TB_GRADE
           JOIN TB_CLASS USING(CLASS_NO)
      WHERE TERM_NO LIKE '2009%'
            OR TERM_NO LIKE '2008%'
            OR TERM_NO LIKE '2007%'
            OR TERM_NO LIKE '2006%'
            OR TERM_NO LIKE '2005%'
      GROUP BY CLASS_NO, CLASS_NAME
      ORDER BY 3 DESC)
WHERE ROWNUM <= 3;

