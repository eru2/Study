--실습문제 --
--도서관리 프로그램을 만들기 위한 테이블들 만들기--
--이때, 제약조건에 이름을 부여할 것
--   각 컬럼에 주석달기

DROP TABLE TB_MEMBER;
DROP TABLE TB_BOOK;
DROP TABLE TB_PUBLISHER;
DROP TABLE TB_RENT;
/*
    1. 출판사들에 대한 데이터를 담기위한 출판사 테이블(TB_PUBLISHER)
    컬럼 : PUB_NO(출판사 번호) - 기본키(PUBLISHER_PK)
          PUB_NAME(출판사명) -- NOT NULL(PUBLISHER_NN)
          PHONE(출판사전화번호) -- 제약조건없음
*/



CREATE TABLE TB_PUBLISHER (
PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
PUB_NAME VARCHAR2(20) CONSTRAINT PULISHER_NN NOT NULL,
PHONE VARCHAR2(13)
);

CREATE TABLE TB_PUBLISHER (
PUB_NO NUMBER,
PUB_NAME VARCHAR2(20) NOT NULL,
PHONE VARCHAR2(13),
CONSTRAINT PUBLISHER_PK PRIMARY KEY(PUB_NO)
);

--샘플 3개정도 생성
INSERT INTO TB_PUBLISHER VALUES(1, '민소', '010-1111-2222');
INSERT INTO TB_PUBLISHER VALUES(2, '해소', NULL);
INSERT INTO TB_PUBLISHER VALUES(3, '동아', '010-1111-2222');

/*
    2. 도서들에 대한 데이터를 담기위한 도서 테이블(TB_BOOK)
    컬럼 : BK_NO(도서번호)--기본키(BOOK_PK)
          BK_TITLE(도서명)--NOT NULL(BOOK__NN_TITLE)
          BK_AUTHOR(저자명)--NOT NULL(BOOK__NN_AUTHOR)
          BK_PRICE(가격)-- 제약조건없음
          BK_PUB_NO(출판사 번호)--외래키(BOOK_FK)(TB_PUBLISHER테이블을 참조)
                                이때 참조하고 있는 부모데이터 삭제시 자식데이터도 삭제 되도록 옵션지정
                                
*/

CREATE TABLE TB_BOOK(
BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
BK_TITLE VARCHAR2(50) CONSTRAINT BOOK_NN_TITLE NOT NULL,
BK_AUTHOR VARCHAR2(20) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
BK_PRICE NUMBER,
BK_PUB_NO NUMBER CONSTRAINT BOOK_FK REFERENCES TB_PUBLISHER(PUB_NO) ON DELETE CASCADE
);

CREATE TABLE TB_BOOK(
BK_NO NUMBER,
BK_TITLE VARCHAR2(50) CONSTRAINT BOOK_NN_TITLE NOT NULL,
BK_AUTHOR VARCHAR2(20) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
BK_PRICE NUMBER,
BK_PUB_NO NUMBER,
CONSTRAINT BOOK_PK PRIMARY KEY(BK_NO),
CONSTRAINT BOOK_FK FOREIGN KEY(BK_PUB_NO) REFERENCES TB_PUCLISHER ON DELETE CASCADE
);

--5개 정도의 샘플 데이터 추가하기

INSERT INTO TB_BOOK VALUES(1, 'THE GIVING TREE', 'SILVERSTEIN', 12000, 3);
INSERT INTO TB_BOOK VALUES(2, 'A CHRISTMAS CAROL', 'CHARLES DICKENS', 20000, 3);
INSERT INTO TB_BOOK VALUES(3, '홍길동전', '허균', 18000, 1);
INSERT INTO TB_BOOK VALUES(4, '전우치전', '작가미상', 18000, 2);
INSERT INTO TB_BOOK VALUES(5, 'HARRY POTER', 'J.K.ROWLING', 23000, 2);

DELETE FROM TB_PUBLISHER
WHERE BOOK_NO = 1;


/*
    3. 회원에 대한 데이터를 담기위한 회원 테이블(TB_MEMBER)
    컬럼명 : MEMBER_NO(회원번호) -- 기본키(MEMBER_PK)
            MEMBER_ID(아이디) -- 중복금지(MEMBER_UQ_ID)
            MEMBER_PWD(비밀번호) -- NOT NULL(MEMBER_NN_PWD)
            MEMBER_NAME(회원명) -- NOT NULL(MEMBER_NN_NAME)
            GENDER(성별) -- M또는 F로 입력되도록 제한(MEMBER_CK_GEN)
            ADDRESS(주소) -- 제약조건없음
            PHONE(연락처)-- 제약조건없음
            STATUS(탈퇴여부) -- 기본값을 N으로 지정, 그리고 N또는 Y만 입력되도록 제약조건 설정(MEMBER_CK_STA)
            ENROLL_DATE(가입일) -- 기본값으로 SYSDATE, NOT NULL 제약조건(MEMBER_NN_EN)
*/

CREATE TABLE TB_MEMBER (
MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
MEMBER_ID VARCHAR2(20) CONSTRAINT MEMBER_UQ_ID UNIQUE,
MEMBER_PWD VARCHAR2(20) CONSTRAINT MEMBER_NN_PWD NOT NULL,
MEMBER_NAME VARCHAR2(20) CONSTRAINT MEMBER_NN_NAME NOT NULL,
GENDER CHAR(3) CONSTRAINT MEMBER_CK_GNE CHECK(GENDER IN('M', 'F')),
ADDRESS VARCHAR(50),
PHONE VARCHAR(13),
STATUS CHAR(5) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN('N', 'Y')),
ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL
);




--5개 정도의 샘플 데이터 추가하기

INSERT INTO TB_MEMBER VALUES(1, 'USER01', 'PASS01', '홍길동', 'M', NULL, '010-1111-2222', DEFAULT, DEFAULT);
INSERT INTO TB_MEMBER VALUES(2, 'USER02', 'PASS01', '홍길순', 'F', 'SEOUL', NULL, 'Y', '20/10/13');
INSERT INTO TB_MEMBER VALUES(3, 'USER03', 'PASS03', '홍길삼', 'M', NULL, NULL, DEFAULT, '23/12/3');
INSERT INTO TB_MEMBER VALUES(4, 'USER04', 'PASS04', '홍길사', 'F', 'BUSAN', '010-1111-2222', 'Y', DEFAULT);
INSERT INTO TB_MEMBER VALUES(5, 'USER05', 'PASS03', '홍길오', 'F', NULL, NULL, DEFAULT, DEFAULT);

INSERT INTO TB_MEMBER VALUES(5, 'USER05', NULL, NULL, 'MF', NULL, NULL, 'NY', NULL);

/*
    4.어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블(TB_RENT)
    컬럼명 : RENT_NO(대여번호)-- 기본키(RENT_PK)
            RENT_MEM_NO(대여회원번호)-- 외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_BOOK_NO(대여도서번호)-- 외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_DATE(대여일) -- 기본값 SYSDATE
*/

CREATE TABLE TB_RENT(
RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
RENT_MEM_NO NUMBER REFERENCES TB_MEMBER ON DELETE SET NULL,
RENT_BOOK_NO NUMBER REFERENCES TB_BOOK ON DELETE SET NULL,
RENT_DATE DATE DEFAULT SYSDATE
);

--3개 정도의 샘플 데이터 추가하기

INSERT INTO TB_RENT VALUES(123, 1, 3, DEFAULT);
INSERT INTO TB_RENT VALUES(234, 2, 5, '21/1/7');
INSERT INTO TB_RENT VALUES(345, 4, 4, DEFAULT);
INSERT INTO TB_RENT VALUES(456, NULL, NULL, NULL);





------------------------------------------------------------------------------------------------

SELECT *
FROM TB_BOOK;

SELECT *
FROM TB_MEMBER;

SELECT *
FROM TB_PUBLISHER;

SELECT *
FROM TB_RENT;

SELECT RENT_NO, MEMBER_NAME, BK_TITLE, RENT_DATE
FROM TB_RENT
JOIN TB_MEMBER ON (RENT_MEM_NO = MEMBER_NO)
JOIN TB_BOOK ON (RENT_BOOK_NO = BK_NO);

SELECT GENDER, MEMBER_NAME, RENT_DATE, BK_TITLE, BK_AUTHOR
FROM TB_MEMBER
JOIN TB_RENT ON (MEMBER_NO = RENT_MEM_NO)
JOIN TB_BOOK ON (TB_RENT.RENT_BOOK_NO = TB_BOOK.BK_NO);


