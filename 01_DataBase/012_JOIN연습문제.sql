--1. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급 조회
SELECT EMP_NAME, PHONE, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE EMP_NAME LIKE '전%'
AND SUBSTR(EMP_NO, 1,2) BETWEEN 70 AND 79
AND SUBSTR(EMP_NO, 8, 1) IN ('2', '4');

--3. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회  
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';

--4. 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_CODE IN ('D5', 'D6');

--5. 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
SELECT EMP_NAME, DEPT_TITLE, NATIONAL_NAME
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
LEFT JOIN LOCATION ON (DEPARTMENT.LOCATION_ID = LOCATION.LOCAL_CODE)
LEFT JOIN NATIONAL ON (LOCATION.NATIONAL_CODE = NATIONAL.NATIONAL_CODE)
WHERE NVL(BONUS, 0) != 0;
--WHERE BONUS IS NOT NULL;

--6. 사원 명, 직급 명, 부서 명, 지역 명 조회 (LEFT JOIN 사유 : 부서코드가 NULL이 있는 사원들이 있어서 그냥 JOIN 사용시 조회가 안되는 사원이 나온다.)
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, NATIONAL_NAME
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
LEFT JOIN JOB USING (JOB_CODE)
LEFT JOIN LOCATION ON (DEPARTMENT.LOCATION_ID = LOCATION.LOCAL_CODE)
LEFT JOIN NATIONAL ON (LOCATION.NATIONAL_CODE = NATIONAL.NATIONAL_CODE);

--7. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (DEPARTMENT.LOCATION_ID = LOCATION.LOCAL_CODE)
JOIN NATIONAL ON (LOCATION.NATIONAL_CODE = NATIONAL.NATIONAL_CODE)
WHERE NATIONAL_NAME IN ('한국', '일본');

--8. 한명의 사원과 같은 부서에서 일하는 사원의 이름 조회(자체조인 활용)  (?????)
SELECT E1.EMP_NAME AS "현재사원", E2.EMP_NAME AS "다른사원", E1.DEPT_CODE
FROM EMPLOYEE E1
JOIN EMPLOYEE E2 ON (E1.DEPT_CODE = E2.DEPT_CODE)
WHERE E1.EMP_ID != E2.EMP_ID
ORDER BY E1.DEPT_CODE, E1.EMP_NAME;

--9. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용)
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE NVL(BONUS, 0) = 0
AND JOB_CODE IN ('J4', 'J7');

--10. 부서 명과 부서 별 급여 합계 조회
SELECT DEPT_TITLE, DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE 
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE, DEPT_CODE;

--11. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회 (서브쿼리) 
SELECT SUM(SALARY) * 0.2
FROM EMPLOYEE;

SELECT D.DEPT_TITLE, SUM(E.SALARY)
FROM EMPLOYEE E
JOIN DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID)
GROUP BY D.DEPT_TITLE
HAVING SUM(E.SALARY) > (SELECT SUM(SALARY) * 0.2
                        FROM EMPLOYEE);

--12. 나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회 (인라인뷰, 서브쿼리)
SELECT *
FROM (SELECT EMP_ID, EMP_NAME, FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RR/MM/DD'))/365) AS "나이", DEPT_TITLE, JOB_NAME
      FROM EMPLOYEE
      JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
      JOIN JOB USING (JOB_CODE)
      ORDER BY 나이)
WHERE ROWNUM =1;

--SELECT ABS(TO_CHAR(SYSDATE, 'YY')- SUBSTR(EMP_NO, 1, 2)) AS "나이"
--SELECT ABS(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(EMP_NO,1,6),'YYMMDD'))/12)) AS "나이"
SELECT FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RR/MM/DD'))/365) AS "나이"
FROM EMPLOYEE;

SELECT EMP_ID, EMP_NAME, FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RR/MM/DD'))/365) AS "나이", DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RR/MM/DD'))/365) = 
         (SELECT MIN(FLOOR((SYSDATE - TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RR/MM/DD'))/365))
         FROM EMPLOYEE);